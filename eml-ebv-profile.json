{
	"schema": {
		"import": [
			{
				"_namespace": "eml://ecoinformatics.org/eml-2.1.1",
				"_schemaLocation": "eml.xsd",
				"__prefix": "xs"
			},
			{
				"_namespace": "http://purl.org/dc/terms/",
				"_schemaLocation": "dc.xsd",
				"__prefix": "xs"
			},
			{
				"_namespace": "http://www.w3.org/XML/1998/namespace",
				"_schemaLocation": "http://rs.gbif.org/schema/xml.xsd",
				"__prefix": "xs"
			}
		],
		"element": [
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The dataset element is a wrapper for all other elements relating to a single dataset"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"_ref": "alternateIdentifier",
								"_minOccurs": "0",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_ref": "title",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_name": "ebv",
								"_type": "ebv",
								"_minOccurs": "1",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The creator is the person who created the resource (not necessarily the author of this metadata about the resource). This is the person or institution to contact with questions about the use, interpretation of a dataset."
									},
									"__prefix": "xs"
								},
								"_name": "creator",
								"_type": "agentType",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The party responsible for the creation of the metadata document"
									},
									"__prefix": "xs"
								},
								"_name": "metadataProvider",
								"_type": "agentType",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_ref": "associatedParty",
								"_minOccurs": "0",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_ref": "pubDate",
								"__prefix": "xs"
							},
							{
								"_ref": "license",
								"__prefix": "xs"
							},
							{
								"_ref": "citation",
								"__prefix": "xs"
							},
							{
								"_ref": "language",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"_ref": "abstract",
								"__prefix": "xs"
							},
							{
								"_ref": "keywordSet",
								"_minOccurs": "0",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_ref": "additionalInfo",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"_ref": "intellectualRights",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"_ref": "distribution",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"_ref": "coverage",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"_ref": "purpose",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"complexType": {
									"sequence": {
										"element": [
											{
												"_ref": "description",
												"__prefix": "xs"
											},
											{
												"_name": "maintenanceUpdateFrequency",
												"_type": "MaintUpFreqType",
												"__prefix": "xs"
											}
										],
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_minOccurs": "0",
								"_name": "maintenance",
								"__prefix": "xs"
							},
							{
								"_name": "contact",
								"_type": "agentType",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_ref": "methods",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"_ref": "project",
								"_minOccurs": "0",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "dataset",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "This is the only identifier issued by the EBV resource for the metadata document; it is a UUID"
					},
					"__prefix": "xs"
				},
				"_name": "alternateIdentifier",
				"_type": "xs:string",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A party associated with the resource. Parties have particular roles."
					},
					"__prefix": "xs"
				},
				"_name": "associatedParty",
				"_type": "agentWithRoleType",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The date on which the resource was published"
					},
					"__prefix": "xs"
				},
				"_name": "pubDate",
				"_type": "yearDate",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A legal document giving official permission to do something with the dataset."
					},
					"__prefix": "xs"
				},
				"_name": "license",
				"_type": "license",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Citation"
					},
					"__prefix": "xs"
				},
				"_name": "citation",
				"_type": "xs:string",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The language in which the resource (not the metadata document) is written"
					},
					"__prefix": "xs"
				},
				"_name": "language",
				"_type": "NonEmptyStringType",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A brief overview describing the dataset"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "para",
							"_maxOccurs": "unbounded",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "abstract",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A wrapper element for the keyword and keywordThesaurus elements"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "This field names a keyword or key phrase that concisely describes the resource or is related to the resource. Each keyword field should contain one and only one keyword"
									},
									"__prefix": "xs"
								},
								"_name": "keyword",
								"_type": "NonEmptyStringType",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The name of the official keyword thesaurus from which keyword was derived"
									},
									"__prefix": "xs"
								},
								"_name": "keywordThesaurus",
								"_type": "NonEmptyStringType",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "keywordSet",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Any information that is not characterized by the other resource metadata fields"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "para",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "additionalInfo",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Contain a rights management statement for the resource, or reference a service providing such information"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "para",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "intellectualRights",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Describes the extent of the coverage of the resource in terms of its spatial extent, temporal extent, and taxonomic extent"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"choice": {
						"element": [
							{
								"_ref": "geographicCoverage",
								"_maxOccurs": "1",
								"__prefix": "xs"
							},
							{
								"_ref": "temporalCoverage",
								"_maxOccurs": "1",
								"__prefix": "xs"
							},
							{
								"_ref": "taxonomicCoverage",
								"_maxOccurs": "1",
								"__prefix": "xs"
							}
						],
						"_maxOccurs": "unbounded",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "coverage",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A container for spatial information about a resource; allows a bounding box for the overall coverage (in lat long), and also allows description of arbitrary polygons with exclusions."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "A short text description of a dataset's geographic areal domain. A text description is especially important to provide a geographic setting when the extent of the dataset cannot be well described by the \"boundingCoordinates\"."
									},
									"__prefix": "xs"
								},
								"_name": "geographicDescription",
								"_type": "NonEmptyStringType",
								"_minOccurs": "1",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "Bounding Coordinates are the four margins (N, S, E, W) of a bounding box, or when considered in lat-lon pairs, the corners of the box."
									},
									"__prefix": "xs"
								},
								"complexType": {
									"sequence": {
										"element": [
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The westBoundingCoordinate field defines the longitude of the western-most point of the bounding box that is being described."
													},
													"__prefix": "xs"
												},
												"_name": "westBoundingCoordinate",
												"_type": "xs:decimal",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The eastBoundingCoordinate field defines the longitude of the eastern-most point of the bounding box that is being described."
													},
													"__prefix": "xs"
												},
												"_name": "eastBoundingCoordinate",
												"_type": "xs:decimal",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The northBoundingCoordinate field defines the latitude of the northern-most point of the bounding box that is being described."
													},
													"__prefix": "xs"
												},
												"_name": "northBoundingCoordinate",
												"_type": "xs:decimal",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The southBoundingCoordinate field defines the latitude of the southern-most point of the bounding box that is being described."
													},
													"__prefix": "xs"
												},
												"_name": "southBoundingCoordinate",
												"_type": "xs:decimal",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "geographicResolution"
													},
													"__prefix": "xs"
												},
												"_name": "resolution",
												"_type": "xs:string",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "geographicUncertainty"
													},
													"__prefix": "xs"
												},
												"_name": "uncertainty",
												"_type": "xs:string",
												"__prefix": "xs"
											}
										],
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_name": "boundingCoordinates",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "geographicCoverage",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "This field specifies temporal coverage, and allows coverages to be a single point in time, multiple points in time, or a range of dates."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"choice": {
							"element": [
								{
									"annotation": {
										"documentation": {
											"__prefix": "xs",
											"__text": "The 'RangeOfDates' field is intended to be used for describing a range of dates and/or times. It may be used multiple times to document multiple date ranges. It allows for two 'singleDateTime' fields, the first to be used as the beginning dateTime, and the second to be used as the ending dateTime of the range."
										},
										"__prefix": "xs"
									},
									"complexType": {
										"sequence": {
											"element": [
												{
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "A single time stamp signifying the beginning of some time period"
														},
														"__prefix": "xs"
													},
													"_name": "beginDate",
													"_type": "calendarDate",
													"__prefix": "xs"
												},
												{
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "A single time stamp signifying the end of some time period"
														},
														"__prefix": "xs"
													},
													"_name": "endDate",
													"_type": "calendarDate",
													"__prefix": "xs"
												}
											],
											"__prefix": "xs"
										},
										"__prefix": "xs"
									},
									"_name": "rangeOfDates",
									"__prefix": "xs"
								},
								{
									"annotation": {
										"documentation": {
											"__prefix": "xs",
											"__text": "The SingleDateTime field is intended to describe a single date and time for an event"
										},
										"__prefix": "xs"
									},
									"_name": "singleDateTime",
									"_type": "calendarDate",
									"__prefix": "xs"
								}
							],
							"__prefix": "xs"
						},
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "temporalResolution"
									},
									"__prefix": "xs"
								},
								"_name": "resolution",
								"_type": "xs:string",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "temporalUncertainty"
									},
									"__prefix": "xs"
								},
								"_name": "uncertainty",
								"_type": "xs:string",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "temporalCoverage",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Taxonomic Coverage is a container for taxonomic information about a resource. It includes a list of species names (or higher level ranks) from one or more classification systems."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "A general description of the range of taxa addressed in the data set or collection"
									},
									"__prefix": "xs"
								},
								"_name": "generalTaxonomicCoverage",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "Information about the range of taxa addressed in the dataset or collection"
									},
									"__prefix": "xs"
								},
								"complexType": {
									"sequence": {
										"element": [
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The name of the taxonomic rank for which the Taxon rank value is provided, e.g., Phylum, Class, Genus, Species"
													},
													"__prefix": "xs"
												},
												"_name": "taxonRankName",
												"_type": "NonEmptyStringType",
												"_minOccurs": "0",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The name representing the taxonomic rank of the taxon being described"
													},
													"__prefix": "xs"
												},
												"_name": "taxonRankValue",
												"_type": "NonEmptyStringType",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "Applicable common names; these common names may be general descriptions of a group of organisms if appropriate, e.g., invertebrates, waterfowl"
													},
													"__prefix": "xs"
												},
												"_name": "commonName",
												"_type": "NonEmptyStringType",
												"_minOccurs": "0",
												"__prefix": "xs"
											}
										],
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_name": "taxonomicClassification",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "taxonomicCoverage",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A description of the purpose of the resource/dataset"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "para",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "purpose",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The methods field documents scientific methods used in the collection of this dataset. It includes information on items such as tools, instrument calibration and software."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The methodStep field allows for repeated sets of elements that document a series of procedures followed to produce a data object. These include text descriptions of the procedures, relevant literature, software, instrumentation, source data and any quality control measures taken."
									},
									"__prefix": "xs"
								},
								"_name": "methodDescription",
								"_type": "description",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The methodStep field allows for repeated sets of elements that document a series of procedures followed to produce a data object. These include text descriptions of the procedures, relevant literature, software, instrumentation, source data and any quality control measures taken."
									},
									"__prefix": "xs"
								},
								"_name": "datasetDependencies",
								"_type": "xs:string",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The methodStep field allows for repeated sets of elements that document a series of procedures followed to produce a data object. These include text descriptions of the procedures, relevant literature, software, instrumentation, source data and any quality control measures taken."
									},
									"__prefix": "xs"
								},
								"_name": "models",
								"_type": "xs:string",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The qualityControl field provides a location for the description of actions taken to either control or assess the quality of data resulting from the associated method step."
									},
									"__prefix": "xs"
								},
								"_name": "qualityControl",
								"_type": "description",
								"_minOccurs": "0",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "methods",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The project field contains information on the project in which this dataset was collected. It includes information such as project personnel, funding, study area, project design and related projects."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"_ref": "title",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The Personnel field extends ResponsibleParty with role information and is used to document people involved in a research project by providing contact information and their role in the project."
									},
									"__prefix": "xs"
								},
								"_name": "personnel",
								"_type": "agentWithRoleType",
								"_maxOccurs": "unbounded",
								"__prefix": "xs"
							},
							{
								"_minOccurs": "0",
								"_ref": "abstract",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The funding field is used to provide information about funding sources for the project such as: grant and contract numbers; names and addresses of funding sources."
									},
									"__prefix": "xs"
								},
								"complexType": {
									"sequence": {
										"element": {
											"_ref": "para",
											"__prefix": "xs"
										},
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_name": "funding",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The studyAreaDescription field documents the physical area associated with the research project. It can include descriptions of the geographic, temporal, and taxonomic coverage of the research location and descriptions of domains (themes) of interest such as climate, geology, soils or disturbances."
									},
									"__prefix": "xs"
								},
								"complexType": {
									"sequence": {
										"element": {
											"_ref": "descriptor",
											"__prefix": "xs"
										},
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_name": "studyAreaDescription",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The field designDescription contains general textual descriptions of research design. It can include detailed accounts of goals, motivations, theory, hypotheses, strategy, statistical design, and actual work."
									},
									"__prefix": "xs"
								},
								"_name": "designDescription",
								"_type": "description",
								"_minOccurs": "0",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"attribute": {
						"annotation": {
							"documentation": {
								"__prefix": "xs",
								"__text": "A unique identifier for the project. This can be used to link multiple datasets that are associated in some way with the same project."
							},
							"__prefix": "xs"
						},
						"_name": "id",
						"_type": "xs:string",
						"_use": "optional",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "project",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The descriptor field is used to document domains (themes) of interest such as climate, geology, soils or disturbances."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "descriptorValue",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"attribute": [
						{
							"_name": "citableClassificationSystem",
							"_use": "optional",
							"_type": "xs:boolean",
							"__prefix": "xs"
						},
						{
							"_name": "name",
							"_use": "optional",
							"_type": "descriptorEnum",
							"__prefix": "xs"
						}
					],
					"__prefix": "xs"
				},
				"_name": "descriptor",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The descriptorValue field contains a general description, either thematic or geographic, of the study area."
					},
					"__prefix": "xs"
				},
				"_name": "descriptorValue",
				"_type": "xs:string",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A flexible field for including any other relevant metadata that pertains to the resource being described. This field allows EML to be extensible in that any XML-based metadata can be included in this element."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"annotation": {
								"documentation": {
									"__prefix": "xs",
									"__text": "This element contains the additional metadata to be included in the document. This element should be used for extending EML to include metadata that is not already available in another part of the EML specification."
								},
								"__prefix": "xs"
							},
							"complexType": {
								"sequence": {
									"element": {
										"annotation": {
											"documentation": {
												"__prefix": "xs",
												"__text": "A block of additional metadata used for some special GBIF purposes and crossmapping to other schemas like the TDWG Natural Collection Data (NCD) schema"
											},
											"__prefix": "xs"
										},
										"complexType": {
											"sequence": {
												"element": [
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "The date the metadata document was created or modified."
															},
															"__prefix": "xs"
														},
														"_name": "dateStamp",
														"_type": "xs:dateTime",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs"
															},
															"__prefix": "xs"
														},
														"_name": "hierarchyLevel",
														"_type": "NonEmptyStringType",
														"_minOccurs": "0",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "A single citation for use when citing the dataset"
															},
															"__prefix": "xs"
														},
														"_name": "citation",
														"_type": "citationType",
														"_minOccurs": "0",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "A list of citations that form a bibliography on literature related / used in the dataset"
															},
															"__prefix": "xs"
														},
														"complexType": {
															"sequence": {
																"element": {
																	"_name": "citation",
																	"_type": "citationType",
																	"_maxOccurs": "unbounded",
																	"__prefix": "xs"
																},
																"__prefix": "xs"
															},
															"__prefix": "xs"
														},
														"_name": "bibliography",
														"_minOccurs": "0",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "A container element for all of the elements that let you describe the internal/external characteristics and distribution of a data object (e.g., dataObject, dataFormat, distribution) ."
															},
															"__prefix": "xs"
														},
														"complexType": {
															"sequence": {
																"element": [
																	{
																		"_ref": "objectName",
																		"__prefix": "xs"
																	},
																	{
																		"_ref": "characterEncoding",
																		"_minOccurs": "0",
																		"__prefix": "xs"
																	},
																	{
																		"_ref": "dataFormat",
																		"__prefix": "xs"
																	},
																	{
																		"_ref": "distribution",
																		"__prefix": "xs"
																	}
																],
																"__prefix": "xs"
															},
															"__prefix": "xs"
														},
														"_name": "physical",
														"_maxOccurs": "unbounded",
														"_minOccurs": "0",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "URL of the logo associated with a resource"
															},
															"__prefix": "xs"
														},
														"_name": "resourceLogoUrl",
														"_type": "xs:anyURI",
														"_minOccurs": "0",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "A container element for other elements associated with collections (e.g., collectionIdentifier, collectionName)."
															},
															"__prefix": "xs"
														},
														"complexType": {
															"sequence": {
																"element": [
																	{
																		"annotation": {
																			"documentation": {
																				"__prefix": "xs",
																				"__text": "Identifier for the parent collection for this sub-collection. Enables a hierarchy of collections and sub collections to be built."
																			},
																			"__prefix": "xs"
																		},
																		"_name": "parentCollectionIdentifier",
																		"_type": "NonEmptyStringType",
																		"_minOccurs": "0",
																		"__prefix": "xs"
																	},
																	{
																		"annotation": {
																			"documentation": {
																				"__prefix": "xs",
																				"__text": "The URI (LSID or URL) of the collection. In RDF, used as URI of the collection resource."
																			},
																			"__prefix": "xs"
																		},
																		"_name": "collectionIdentifier",
																		"_type": "NonEmptyStringType",
																		"_minOccurs": "0",
																		"__prefix": "xs"
																	},
																	{
																		"annotation": {
																			"documentation": {
																				"__prefix": "xs",
																				"__text": "Official name of the Collection in the local language"
																			},
																			"__prefix": "xs"
																		},
																		"_name": "collectionName",
																		"_type": "NonEmptyStringType",
																		"__prefix": "xs"
																	}
																],
																"__prefix": "xs"
															},
															"__prefix": "xs"
														},
														"_name": "collection",
														"_minOccurs": "0",
														"_maxOccurs": "unbounded",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "Text description of the time period during which the collection was assembled e.g. \"Victorian\", or \"1922 - 1932\", or \"c. 1750\"."
															},
															"__prefix": "xs"
														},
														"_name": "formationPeriod",
														"_type": "NonEmptyStringType",
														"_minOccurs": "0",
														"_maxOccurs": "unbounded",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "Picklist keyword indicating the process or technique used to prevent physical deterioration of non-living collections. Expected to contain a value from the GBIF Specimen Preservation Method vocabulary"
															},
															"__prefix": "xs"
														},
														"_name": "specimenPreservationMethod",
														"_type": "NonEmptyStringType",
														"_minOccurs": "0",
														"_maxOccurs": "unbounded",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "Time period during which biological material was alive. (for palaeontological collections)"
															},
															"__prefix": "xs"
														},
														"_name": "livingTimePeriod",
														"_type": "NonEmptyStringType",
														"_minOccurs": "0",
														"_maxOccurs": "unbounded",
														"__prefix": "xs"
													},
													{
														"_ref": "jgtiCuratorialUnit",
														"_maxOccurs": "unbounded",
														"_minOccurs": "0",
														"__prefix": "xs"
													},
													{
														"annotation": {
															"documentation": {
																"__prefix": "xs",
																"__text": "Pointer to previous version of the document"
															},
															"__prefix": "xs"
														},
														"_ref": "dc:replaces",
														"_minOccurs": "0",
														"__prefix": "xs"
													}
												],
												"__prefix": "xs"
											},
											"__prefix": "xs"
										},
										"_name": "ebv",
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"__prefix": "xs"
							},
							"_name": "metadata",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "additionalMetadata",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A quantitative descriptor (number of specimens, samples or batches)."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"annotation": {
								"documentation": {
									"__prefix": "xs",
									"__text": "A general description of the unit of curation, e.g., 'jar containing plankton sample';"
								},
								"__prefix": "xs"
							},
							"_name": "jgtiUnitType",
							"_type": "NonEmptyStringType",
							"__prefix": "xs"
						},
						"choice": {
							"element": [
								{
									"annotation": {
										"documentation": {
											"__prefix": "xs",
											"__text": "The exact number of units within the collection"
										},
										"__prefix": "xs"
									},
									"complexType": {
										"simpleContent": {
											"extension": {
												"attribute": {
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "A measure of the uncertainty (+ or -) x associated with the jgtiUnits value"
														},
														"__prefix": "xs"
													},
													"_name": "uncertaintyMeasure",
													"_use": "required",
													"_type": "xs:integer",
													"__prefix": "xs"
												},
												"_base": "xs:integer",
												"__prefix": "xs"
											},
											"__prefix": "xs"
										},
										"__prefix": "xs"
									},
									"_name": "jgtiUnits",
									"__prefix": "xs"
								},
								{
									"annotation": {
										"documentation": {
											"__prefix": "xs",
											"__text": "A range of numbers (x to x), with the lower value representing an exact number, when the higher value is omitted."
										},
										"__prefix": "xs"
									},
									"complexType": {
										"sequence": {
											"element": [
												{
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "The lower value in a range of numbers. Use to represent an exact number by omitting the \"endRange\" value."
														},
														"__prefix": "xs"
													},
													"_name": "beginRange",
													"_type": "xs:integer",
													"__prefix": "xs"
												},
												{
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "The upper value in a range of numbers."
														},
														"__prefix": "xs"
													},
													"_name": "endRange",
													"_type": "xs:integer",
													"__prefix": "xs"
												}
											],
											"__prefix": "xs"
										},
										"__prefix": "xs"
									},
									"_name": "jgtiUnitRange",
									"__prefix": "xs"
								}
							],
							"_maxOccurs": "1",
							"_minOccurs": "1",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "jgtiCuratorialUnit",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The name of the data object. This  often is the filename of a file in a file system or that is accessible on the network."
					},
					"__prefix": "xs"
				},
				"_name": "objectName",
				"_type": "NonEmptyStringType",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "This element contains the name of the character encoding. This is typically ASCII or UTF-8, or one of the other common encodings."
					},
					"__prefix": "xs"
				},
				"_name": "characterEncoding",
				"_type": "NonEmptyStringType",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "This is a container element for other elements which describe the internal physical characteristics of the data object."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"choice": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "Description of a text formatted object.\n                The description includes detailed parsing instructions for\n                extracting attributes from the bytestream for simple\n                delimited file formats (e.g., CSV), fixed format files\n                that use fixed columns for attribute locations, and\n                mixtures of the two.  It also supports records that\n                span multiple lines."
									},
									"__prefix": "xs"
								},
								"complexType": {
									"sequence": {
										"element": [
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "Number of header lines preceding\n                      data.  Lines are determined by the\n                      physicalLineDelimiter, or if it is absent, by the\n                      recordDelimiter.  This value indicated the\n                      number of header lines that should be skipped\n                      before starting to parse the data."
													},
													"__prefix": "xs"
												},
												"_name": "numHeaderLines",
												"_type": "xs:int",
												"_minOccurs": "0",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "Number of footer lines following\n                      data.  Lines are determined by the\n                      physicalLineDelimiter, or if it is absent, by the\n                      recordDelimiter.  This value indicated the\n                      number of footer lines that should be skipped\n                      after parsing the data. If this value is omitted,\n                      parsers should assume the data continues to the end\n                      of the data stream."
													},
													"__prefix": "xs"
												},
												"_name": "numFooterLines",
												"_type": "xs:int",
												"_minOccurs": "0",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "This element specifies the record\n                      delimiter character when the format is text. The\n                      record delimiter is usually a linefeed (\\n) on UNIX, a\n                      carriage return (\\r) on MacOS, or both (\\r\\n) on\n                      Windows/DOS. Multiline records are usually delimited\n                      with two line ending characters, for example on UNIX\n                      it would be two linefeed characters (\\n\\n). As record\n                      delimiters are often non-printing characters, one can\n                      use either the special value \"\\n\" to represent a\n                      linefeed (ASCII 0x0a) and \"\\r\" to represent a carriage\n                      return (ASCII 0x0d).  Alternatively, one can use the\n                      hex value to represent character values (e.g., 0x0a)."
													},
													"__prefix": "xs"
												},
												"_name": "recordDelimiter",
												"_type": "xs:string",
												"_minOccurs": "0",
												"_maxOccurs": "unbounded",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "This element specifies the physical\n                      line delimiter character when the format is text. The\n                      line delimiter is usually a linefeed (\\n) on UNIX, a\n                      carriage return (\\r) on MacOS, or both (\\r\\n) on\n                      Windows/DOS. Multiline records are usually delimited\n                      with two line ending characters, for example on UNIX\n                      it would be two linefeed characters (\\n\\n). As line\n                      delimiters are often non-printing characters, one can\n                      use either the special value \"\\n\" to represent a\n                      linefeed (ASCII 0x0a) and \"\\r\" to represent a carriage\n                      return (ASCII 0x0d).  Alternatively, one can use the\n                      hex value to represent character values (e.g., 0x0a).\n                      If this value is not provided, processors should\n                      assume that the physical line delimiter is the same\n                      as the record delimiter."
													},
													"__prefix": "xs"
												},
												"_name": "physicalLineDelimiter",
												"_type": "xs:string",
												"_minOccurs": "0",
												"_maxOccurs": "unbounded",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "A single logical data record may be\n                      written over several physical lines in a file, with\n                      no special marker to indicate the end of a record. In\n                      such cases, it is necessary to know the number of\n                      lines per record in order to correctly read\n                      them. If this value is not provided, processors should\n                      assume that records are wholly contained on one\n                      physical line.  If the value is greater than 1, then\n                      processors should examine the lineNumber field for\n                      each attribute to determine which line of the\n                      record contains the information."
													},
													"__prefix": "xs"
												},
												"_name": "numPhysicalLinesPerRecord",
												"_type": "xs:unsignedInt",
												"_minOccurs": "0",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "The maximum number of characters\n                      in any record in the physical file.  For delimited\n                      files, the record length varies and this is not\n                      particularly useful.  However, for fixed format files\n                      that do not contain record delimiters, this field is\n                      critical to tell processors when one record stops\n                      and another begins."
													},
													"__prefix": "xs"
												},
												"_name": "maxRecordLength",
												"_type": "xs:unsignedLong",
												"_minOccurs": "0",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "Specifies whether the attributes\n                      described in the physical stream are found in\n                      columns or rows. The valid values are column or row.\n                      If set to 'column', then the attributes are in\n                      columns. If set to 'row', then the attributes\n                      are in rows.  Row orientation is rare,  but some\n                      systems such as SPlus and R utilize it.\n\n                      For example, some data with column orientation:\n                      DATE          PLOT           SPECIES\n                      2002-01-15    hfr5           acer rubrum\n                      2002-01-15    hfr5           acer xxxx\n\n                      The same data in a rowMajor table:\n                      DATE   2002-01-15\n                      PLOT   hfr5\n                      SPECIES acer rubrum  acer xxxx"
													},
													"__prefix": "xs"
												},
												"simpleType": {
													"restriction": {
														"enumeration": [
															{
																"_value": "column",
																"__prefix": "xs"
															},
															{
																"_value": "row",
																"__prefix": "xs"
															}
														],
														"_base": "xs:string",
														"__prefix": "xs"
													},
													"__prefix": "xs"
												},
												"_name": "attributeOrientation",
												"__prefix": "xs"
											}
										],
										"choice": {
											"element": [
												{
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "A simple delimited format that\n                        uses one of a series of delimiters to indicate\n                        the ends of fields in the data stream. More\n                        complex formats such as fixed format or mixed\n                        delimited and fixed formats can be described using\n                        the \"complex\" element."
														},
														"__prefix": "xs"
													},
													"complexType": {
														"sequence": {
															"element": [
																{
																	"annotation": {
																		"documentation": {
																			"__prefix": "xs",
																			"__text": "This element specifies\n                              a character to be used in the object for\n                              indicating the ending column for an attribute.\n                              The delimiter character itself is not part\n                              of the attribute value, but rather is present\n                              in the column following the last character\n                              of the value. Typical delimiter characters\n                              include commas, tabs, spaces, and semicolons.\n                              The only time the fieldDelimiter character is\n                              not interpreted as a delimiter is if it\n                              is contained in a quoted string\n                              (see quoteCharacter) or is immediately\n                              preceded by a literalCharacter.\n                              Non-printable quote characters can be\n                              provided as their hex values, and for tab\n                              characters by its ASCII string \"\\t\".\n                              Processors should assume that the field\n                              starts in the column following the previous\n                              field if the previous field was fixed,\n                              or in the column following the delimiter\n                              from the previous field if the previous\n                              field was delimited."
																		},
																		"__prefix": "xs"
																	},
																	"_name": "fieldDelimiter",
																	"_type": "xs:string",
																	"_maxOccurs": "unbounded",
																	"__prefix": "xs"
																},
																{
																	"annotation": {
																		"documentation": {
																			"__prefix": "xs",
																			"__text": "The collapseDelimiters element\n                              specifies whether sequential delimiters\n                              should be treated as a single delimiter or\n                              multiple delimiters.    An example is when\n                              a space delimiter is used; often there may\n                              be several repeated spaces that should be\n                              treated as a single delimiter, but not\n                              always. The valid values are yes or no.\n                              If it is set to yes, then consecutive\n                              delimiters will be collapsed to one.  If set\n                              to no or absent, then consecutive delimiters\n                              will be treated as separate delimiters.\n                              Default behaviour is no; hence, consecutive\n                              delimiters will be treated as separate\n                              delimiters, by default."
																		},
																		"__prefix": "xs"
																	},
																	"simpleType": {
																		"restriction": {
																			"enumeration": [
																				{
																					"_value": "yes",
																					"__prefix": "xs"
																				},
																				{
																					"_value": "no",
																					"__prefix": "xs"
																				}
																			],
																			"_base": "xs:string",
																			"__prefix": "xs"
																		},
																		"__prefix": "xs"
																	},
																	"_name": "collapseDelimiters",
																	"_minOccurs": "0",
																	"__prefix": "xs"
																},
																{
																	"annotation": {
																		"documentation": {
																			"__prefix": "xs",
																			"__text": "This element specifies\n                              a character to be used in the object for\n                              quoting values so that field delimiters can\n                              be used within the value. This basically\n                              allows delimiter \"escaping\". The quoteChacter\n                              is typically a \" or '. When a processor\n                              encounters a quote character, it should\n                              not interpret any following characters as\n                              a delimiter until a matching quote character\n                              has been encountered (i.e., quotes come in\n                              pairs). It is an error to not provide a\n                              closing quote before the record ends.\n                              Non-printable quote characters can be\n                              provided as their hex values."
																		},
																		"__prefix": "xs"
																	},
																	"_name": "quoteCharacter",
																	"_type": "NonEmptyStringType",
																	"_minOccurs": "0",
																	"_maxOccurs": "unbounded",
																	"__prefix": "xs"
																},
																{
																	"annotation": {
																		"documentation": {
																			"__prefix": "xs",
																			"__text": "This element specifies\n                              a character to be used for escaping\n                              special character values so that they\n                              are treated as literal values.\n                              This allows \"escaping\" for special\n                              characters like quotes, commas, and spaces\n                              when they are intended to be used in an\n                              attribute value rather than being intended\n                              as a delimiter.  The literalCharacter is\n                              typically a \\."
																		},
																		"__prefix": "xs"
																	},
																	"_name": "literalCharacter",
																	"_type": "NonEmptyStringType",
																	"_minOccurs": "0",
																	"_maxOccurs": "unbounded",
																	"__prefix": "xs"
																}
															],
															"__prefix": "xs"
														},
														"__prefix": "xs"
													},
													"_name": "simpleDelimited",
													"__prefix": "xs"
												},
												{
													"annotation": {
														"documentation": {
															"__prefix": "xs",
															"__text": "A complex text format that\n                        can describe delimited fields, fixed width\n                        fields, and mixtures of the two. This supports\n                        multiline records (where one record is distributed\n                        across multiple physical lines).  When using the\n                        complex format, the number of textFixed and\n                        textDelimited elements should exactly equal the\n                        number of attributes that have been described\n                        for the entity, and the order of the textFixed\n                        and textDelimited elements should correspond to\n                        the order of the attributes as described in the\n                        entity. Thus, for a delimited file with fourteen\n                        attributes, one should provide exactly fourteen\n                        textDelimited elements."
														},
														"__prefix": "xs"
													},
													"complexType": {
														"choice": {
															"element": [
																{
																	"annotation": {
																		"documentation": {
																			"__prefix": "xs",
																			"__text": "Describes the physical\n                              format of data sequences that use a fixed\n                              number of characters in a specified position\n                              in the stream to locate attribute values.\n                              This method is common in sensor-derived\n                              data and in legacy database systems.  To\n                              parse it, one must know the number\n                              of characters for each attribute and the\n                              starting column and line to begin reading\n                              the value."
																		},
																		"__prefix": "xs"
																	},
																	"complexType": {
																		"sequence": {
																			"element": [
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "Fixed width fields\n                                    have a set length, thus the end of\n                                    the field can always be determined by\n                                    adding the fieldWidth to the starting\n                                    column number."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "fieldWidth",
																					"_type": "xs:unsignedLong",
																					"__prefix": "xs"
																				},
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "The line on which\n                                    the data field is found, when\n                                    the data record is written over\n                                    more than one physical line in\n                                    the file. A single logical\n                                    data record may be written over\n                                    several physical lines in a file,\n                                    with no special marker to indicate\n                                    the end of a record. In such\n                                    cases, the relative location of\n                                    a data field must be indicated\n                                    by both relative row and column\n                                    number.  The lineNumber should never\n                                    greater that the number of physical\n                                    lines per record."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "lineNumber",
																					"_type": "xs:unsignedLong",
																					"_minOccurs": "0",
																					"__prefix": "xs"
																				},
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "The starting\n                                    column number for a fixed format\n                                    attribute. Fixed width fields\n                                    have a set length, thus the end of\n                                    the field can always be determined by\n                                    adding the fieldWidth to the starting\n                                    column number. If the starting\n                                    column is not provided, processors\n                                    should assume that the field starts\n                                    in the column following the previous\n                                    field if the previous field was fixed,\n                                    or in the column following the\n                                    delimiter from the previous field if\n                                    the previous field was delimited."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "fieldStartColumn",
																					"_type": "xs:long",
																					"_minOccurs": "0",
																					"__prefix": "xs"
																				}
																			],
																			"__prefix": "xs"
																		},
																		"__prefix": "xs"
																	},
																	"_name": "textFixed",
																	"__prefix": "xs"
																},
																{
																	"annotation": {
																		"documentation": {
																			"__prefix": "xs",
																			"__text": "Describes the physical\n                              format of data sequences that use delimiters\n                              in the stream to locate attribute values.\n                              This method is common in data exported from\n                              spreadsheets and database systems,\n                              To parse it, one must know the character\n                              that indicates the end of each attribute\n                              and the line to begin reading the value."
																		},
																		"__prefix": "xs"
																	},
																	"complexType": {
																		"sequence": {
																			"element": [
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "This element specifies a character to be used\n                                    in the object for indicating the\n                                    ending column for an attribute.\n                                    The delimiter character itself is\n                                    not part of the attribute value,\n                                    but rather is present in the column\n                                    following the last character of the\n                                    value. Typical delimiter characters\n                                    include commas, tabs, spaces,\n                                    and semicolons.  The only time the\n                                    fieldDelimiter character is not\n                                    interpreted as a delimiter is if it\n                                    is contained in a quoted string (see\n                                    quoteCharacter) or is immediately\n                                    preceded by a literalCharacter.\n                                    Non-printable quote characters can\n                                    be provided as their hex values,\n                                    and for tab characters by its ASCII\n                                    string \"\\t\".  Processors should\n                                    assume that the field starts in the\n                                    column following the previous field\n                                    if the previous field was fixed,\n                                    or in the column following the\n                                    delimiter from the previous field\n                                    if the previous field was delimited."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "fieldDelimiter",
																					"_type": "xs:string",
																					"__prefix": "xs"
																				},
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "The collapseDelimiters element\n                                    specifies whether sequential delimiters\n                                    should be treated as a single delimiter\n                                    or multiple delimiters.    An example\n                                    is when a space delimiter is used;\n                                    often there may be several repeated\n                                    spaces that should be treated as a\n                                    single delimiter, but not always. The\n                                    valid values are yes or no.  If it\n                                    is set to yes, then consecutive\n                                    delimiters will be collapsed\n                                    to one.  If set to no or absent,\n                                    then consecutive delimiters will\n                                    be treated as separate delimiters.\n                                    Default behaviour is no; hence,\n                                    consecutive delimiters will be treated\n                                    as separate delimiters, by default."
																						},
																						"__prefix": "xs"
																					},
																					"simpleType": {
																						"restriction": {
																							"enumeration": [
																								{
																									"_value": "yes",
																									"__prefix": "xs"
																								},
																								{
																									"_value": "no",
																									"__prefix": "xs"
																								}
																							],
																							"_base": "xs:string",
																							"__prefix": "xs"
																						},
																						"__prefix": "xs"
																					},
																					"_name": "collapseDelimiters",
																					"_minOccurs": "0",
																					"__prefix": "xs"
																				},
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "A single logical\n                                    data record may be written over\n                                    several physical lines in a file,\n                                    with no special marker to indicate\n                                    the end of a record. In such\n                                    cases, the relative location of\n                                    a data field must be indicated\n                                    by both relative row and column\n                                    number.\n                                    The lineNumber should never be\n                                    greater that the number of physical\n                                    lines per record.  When parsing the\n                                    first field on a physical line as\n                                    a delimited field, they should assume\n                                    that the field data starts in the\n                                    first column.  Otherwise, follow the\n                                    rules indicated under fieldDelimiter."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "lineNumber",
																					"_type": "xs:unsignedLong",
																					"_minOccurs": "0",
																					"__prefix": "xs"
																				},
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "This element\n                                    specifies a character to be used in\n                                    the object for quoting values so\n                                    that field delimiters can be used\n                                    within the value. This basically\n                                    allows delimiter \"escaping\". The\n                                    quoteChacter is typically a \" or\n                                    '. When a processor encounters\n                                    a quote character, it should not\n                                    interpret any following characters\n                                    as a delimiter until a matching\n                                    quote character has been encountered\n                                    (i.e., quotes come in pairs). It is\n                                    an error to not provide a closing\n                                    quote before the record ends.\n                                    Non-printable quote characters\n                                    can be provided as their hex\n                                    values."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "quoteCharacter",
																					"_type": "NonEmptyStringType",
																					"_minOccurs": "0",
																					"_maxOccurs": "unbounded",
																					"__prefix": "xs"
																				},
																				{
																					"annotation": {
																						"documentation": {
																							"__prefix": "xs",
																							"__text": "This element\n                                    specifies a character to be used\n                                    for escaping special character\n                                    values so that they are treated\n                                    as literal values.  This allows\n                                    \"escaping\" for special characters\n                                    like quotes, commas, and spaces\n                                    when they are intended to be used\n                                    in an attribute value rather than\n                                    being intended as a delimiter.\n                                    The literalCharacter is typically\n                                    a \\."
																						},
																						"__prefix": "xs"
																					},
																					"_name": "literalCharacter",
																					"_type": "NonEmptyStringType",
																					"_minOccurs": "0",
																					"_maxOccurs": "unbounded",
																					"__prefix": "xs"
																				}
																			],
																			"__prefix": "xs"
																		},
																		"__prefix": "xs"
																	},
																	"_name": "textDelimited",
																	"__prefix": "xs"
																}
															],
															"_maxOccurs": "unbounded",
															"__prefix": "xs"
														},
														"__prefix": "xs"
													},
													"_name": "complex",
													"__prefix": "xs"
												}
											],
											"__prefix": "xs"
										},
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_name": "textFormat",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "Information about a non-text or proprietary formatted object."
									},
									"__prefix": "xs"
								},
								"complexType": {
									"sequence": {
										"element": [
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "Name of the format of the data object, e.g., ESRI Shapefile."
													},
													"__prefix": "xs"
												},
												"_name": "formatName",
												"_type": "xs:string",
												"__prefix": "xs"
											},
											{
												"annotation": {
													"documentation": {
														"__prefix": "xs",
														"__text": "Version of the format of the data object"
													},
													"__prefix": "xs"
												},
												"_name": "formatVersion",
												"_type": "NonEmptyStringType",
												"_minOccurs": "0",
												"__prefix": "xs"
											}
										],
										"__prefix": "xs"
									},
									"__prefix": "xs"
								},
								"_name": "externallyDefinedFormat",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "dataFormat",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The 'title' field provides a description of the resource that is being documented that is long enough to differentiate it from other similar resources. Multiple titles may be provided, particularly when trying to express the title in more than one language (use the \"xml:lang\" attribute to indicate the language if not English/en)."
					},
					"__prefix": "xs"
				},
				"_name": "title",
				"_type": "i18nString",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The individualName field contains subfields so that a person's name can be broken down into parts."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The given name field can be used for first name of the individual associated with the resource, or for any other names that are not intended to be alphabetized, (as appropriate)."
									},
									"__prefix": "xs"
								},
								"_name": "givenName",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The surname field is used for the last name of the individual associated with the resource. This is typically the family name of an individual, for example, the name by which s/he is referred to in citations."
									},
									"__prefix": "xs"
								},
								"_name": "surName",
								"_type": "NonEmptyStringType",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "individualName",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The address field is a container for multiple subfields that describe the physical or electronic address of the responsible party for a resource."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The delivery point field is used for the physical address for postal communication, e.g., GBIF Secretariat, Universitetsparken 15"
									},
									"__prefix": "xs"
								},
								"_name": "deliveryPoint",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The city field is used for the city name of the contact associated with a particular resource."
									},
									"__prefix": "xs"
								},
								"_name": "city",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The administrative area field is the equivalent of a 'state' in the U.S., or Province in Canada. This field is intended to accommodate the many types of international administrative areas."
									},
									"__prefix": "xs"
								},
								"_name": "administrativeArea",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The postal code is equivalent to a U.S. zip code, or the number used for routing to an international address."
									},
									"__prefix": "xs"
								},
								"_name": "postalCode",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The country field is used for the name of the contact's country."
									},
									"__prefix": "xs"
								},
								"_name": "country",
								"_type": "NonEmptyStringType",
								"_minOccurs": "0",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "address",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The phone field describes information about the responsible party's telephone, be it a voice phone, fax."
					},
					"__prefix": "xs"
				},
				"_name": "phone",
				"_type": "xs:string",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The electronic mail address is the email address for the party. It is intended to be an Internet SMTP email address, which should consist of a username followed by the @ symbol, followed by the email server domain name address."
					},
					"__prefix": "xs"
				},
				"_name": "electronicMailAddress",
				"_type": "NonEmptyStringType",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A link to associated online information, usually a web site. When the party represents an organization, this is the URL to a website or other online information about the organization. If the party is an individual, it might be their personal web site or other related online information about the party."
					},
					"__prefix": "xs"
				},
				"_name": "onlineUrl",
				"_type": "xs:anyURI",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "An identifier that links this party to a directory of personnel. Although specific contact information for a party might change, the underlying correspondence to a real individual does not.  This identifier provides a pointer within a personnel directory that may contain further, and possibly more current, information about the party."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"simpleContent": {
						"extension": {
							"attribute": {
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "This attribute names the directory system to which this userId applies. This will generally be a URL that shows how to look up information, for example an LDAP url. However, it could also be a non-parsable description of the directory system if that is all that is available."
									},
									"__prefix": "xs"
								},
								"_name": "directory",
								"_use": "required",
								"_type": "NonEmptyStringType",
								"__prefix": "xs"
							},
							"_base": "NonEmptyStringType",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "userId",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Use this field to describe the role the party played with respect to the resource. Some potential roles include technician, reviewer, principal investigator, and many others."
					},
					"__prefix": "xs"
				},
				"_name": "role",
				"_type": "xs:string",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The \"paragraph\" element allows for text blocks to be included in EML."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "ulink",
							"_minOccurs": "0",
							"_maxOccurs": "1",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"_mixed": "true",
					"__prefix": "xs"
				},
				"_name": "para",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "This element provides information on how the resource is distributed. When used at the resource level, this element can provide only general information, but elements for describing connections to online systems are provided."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": [
							{
								"_name": "url",
								"_type": "xs:anyURI",
								"__prefix": "xs"
							},
							{
								"_name": "protocol",
								"_type": "protocol",
								"__prefix": "xs"
							},
							{
								"_name": "name",
								"_type": "xs:string",
								"__prefix": "xs"
							},
							{
								"_name": "description",
								"_type": "xs:string",
								"__prefix": "xs"
							}
						],
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "distribution",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "This element contains information for accessing the resource online represented as a URL connection"
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "url",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "online",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The URL of the resource that is available online."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"simpleContent": {
						"extension": {
							"attribute": {
								"_name": "function",
								"_use": "required",
								"_type": "xs:string",
								"__prefix": "xs"
							},
							"_base": "xs:anyURI",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "url",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The calendar date field is used to express a date, giving the year, month, and day. The format should be one that complies with the International Standards Organization's standard 8601. The recommended format for EML is YYYY-MM-DD, where Y is the four digit year, M is the two digit month code (01 - 12, where January = 01), and D is the two digit day of the month (01 - 31). This field can also be used to enter just the year portion of a date."
					},
					"__prefix": "xs"
				},
				"_name": "calendarDate",
				"_type": "yearDate",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "The field Description contains general textual descriptions."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"_ref": "para",
							"_minOccurs": "0",
							"_maxOccurs": "unbounded",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"_mixed": "true",
					"__prefix": "xs"
				},
				"_name": "description",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "this element and its children allow paragraphs to contain urls and titles for anchor tags."
					},
					"__prefix": "xs"
				},
				"complexType": {
					"sequence": {
						"element": {
							"annotation": {
								"documentation": {
									"__prefix": "xs",
									"__text": "the citetitle element  contains a text title for the url. It can be displayed in an anchor tag."
								},
								"__prefix": "xs"
							},
							"_name": "citetitle",
							"_type": "NonEmptyStringType",
							"__prefix": "xs"
						},
						"__prefix": "xs"
					},
					"attribute": {
						"annotation": {
							"documentation": {
								"__prefix": "xs",
								"__text": "the url attribute contains the location of the work for a link."
							},
							"__prefix": "xs"
						},
						"_name": "url",
						"_use": "required",
						"_type": "NonEmptyStringType",
						"__prefix": "xs"
					},
					"_mixed": "true",
					"__prefix": "xs"
				},
				"_name": "ulink",
				"__prefix": "xs"
			}
		],
		"simpleType": [
			{
				"restriction": {
					"enumeration": [
						{
							"_value": "annually",
							"__prefix": "xs"
						},
						{
							"_value": "asNeeded",
							"__prefix": "xs"
						},
						{
							"_value": "biannually",
							"__prefix": "xs"
						},
						{
							"_value": "continually",
							"__prefix": "xs"
						},
						{
							"_value": "daily",
							"__prefix": "xs"
						},
						{
							"_value": "irregular",
							"__prefix": "xs"
						},
						{
							"_value": "monthly",
							"__prefix": "xs"
						},
						{
							"_value": "notPlanned",
							"__prefix": "xs"
						},
						{
							"_value": "weekly",
							"__prefix": "xs"
						},
						{
							"_value": "unkown",
							"__prefix": "xs"
						},
						{
							"_value": "otherMaintenancePeriod",
							"__prefix": "xs"
						}
					],
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "MaintUpFreqType",
				"__prefix": "xs"
			},
			{
				"restriction": {
					"enumeration": [
						{
							"_value": "Co-ancestry",
							"__prefix": "xs"
						},
						{
							"_value": "Allelic diversity",
							"__prefix": "xs"
						},
						{
							"_value": "Population genetic differentiation",
							"__prefix": "xs"
						},
						{
							"_value": "Breed and variety diversity",
							"__prefix": "xs"
						},
						{
							"_value": "Species distribution",
							"__prefix": "xs"
						},
						{
							"_value": "Population abundance",
							"__prefix": "xs"
						},
						{
							"_value": "Population structure by age/size class",
							"__prefix": "xs"
						},
						{
							"_value": "Phenology",
							"__prefix": "xs"
						},
						{
							"_value": "Morphology",
							"__prefix": "xs"
						},
						{
							"_value": "Reproduction",
							"__prefix": "xs"
						},
						{
							"_value": "Physiology",
							"__prefix": "xs"
						},
						{
							"_value": "Movement",
							"__prefix": "xs"
						},
						{
							"_value": "Taxonomic diversity",
							"__prefix": "xs"
						},
						{
							"_value": "Species interactions",
							"__prefix": "xs"
						},
						{
							"_value": "Net primary productivity",
							"__prefix": "xs"
						},
						{
							"_value": "Secondary productivity",
							"__prefix": "xs"
						},
						{
							"_value": "Nutrient retention",
							"__prefix": "xs"
						},
						{
							"_value": "Disturbance regime",
							"__prefix": "xs"
						},
						{
							"_value": "Habitat structure",
							"__prefix": "xs"
						},
						{
							"_value": "Ecosystem extent and fragmentation",
							"__prefix": "xs"
						},
						{
							"_value": "Ecosystem composition by functional type",
							"__prefix": "xs"
						}
					],
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "ebvName",
				"__prefix": "xs"
			},
			{
				"restriction": {
					"enumeration": [
						{
							"_value": "Genetic composition",
							"__prefix": "xs"
						},
						{
							"_value": "Species populations",
							"__prefix": "xs"
						},
						{
							"_value": "Species traits",
							"__prefix": "xs"
						},
						{
							"_value": "Community composition",
							"__prefix": "xs"
						},
						{
							"_value": "Ecosystem function",
							"__prefix": "xs"
						},
						{
							"_value": "Ecosystem structure",
							"__prefix": "xs"
						}
					],
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "ebvClass",
				"__prefix": "xs"
			},
			{
				"restriction": {
					"enumeration": [
						{
							"_value": "CCO",
							"__prefix": "xs"
						},
						{
							"_value": "CC BY",
							"__prefix": "xs"
						},
						{
							"_value": "CC BY-NC",
							"__prefix": "xs"
						}
					],
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "license",
				"__prefix": "xs"
			},
			{
				"restriction": {
					"enumeration": [
						{
							"_value": "OGC:WFS",
							"__prefix": "xs"
						},
						{
							"_value": "OGC:WCS",
							"__prefix": "xs"
						}
					],
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "protocol",
				"__prefix": "xs"
			},
			{
				"restriction": {
					"enumeration": [
						{
							"_value": "thematic",
							"__prefix": "xs"
						},
						{
							"_value": "geographic",
							"__prefix": "xs"
						},
						{
							"_value": "generic",
							"__prefix": "xs"
						}
					],
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "descriptorEnum",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A type allowing a year or date value.\n        This type is the union of the built-in types for year and date.\n        Example: 1999, or 2001-03-15"
					},
					"__prefix": "xs"
				},
				"union": {
					"_memberTypes": "xs:gYear xs:date",
					"__prefix": "xs"
				},
				"_name": "yearDate",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "Non Empty String Type.\n        This type specifies a content pattern for all elements \n          that are required by EML to ensure that there is actual content (i.e., \n          not just whitespace). The pattern described can be interpreted as\n          \"at least one non-whitespace character, followed\n          by any number of whitespace plus not-whitespace characters. \"\n          Leading and/or trailing whitespace is allowed, and whitespace \n          may include carriage returns and newlines."
					},
					"__prefix": "xs"
				},
				"restriction": {
					"minLength": {
						"_value": "1",
						"__prefix": "xs"
					},
					"pattern": {
						"_value": "[\\s]*[\\S][\\s\\S]*",
						"__prefix": "xs"
					},
					"_base": "xs:string",
					"__prefix": "xs"
				},
				"_name": "NonEmptyStringType",
				"__prefix": "xs"
			}
		],
		"complexType": [
			{
				"sequence": {
					"element": [
						{
							"annotation": {
								"documentation": {
									"__prefix": "xs",
									"__text": "A class name in the domain of the GEO BON List of Essential Biodiversity Variables."
								},
								"__prefix": "xs"
							},
							"_name": "class",
							"_type": "ebvClass",
							"__prefix": "xs"
						},
						{
							"annotation": {
								"documentation": {
									"__prefix": "xs",
									"__text": "A name of the Essential Biodiversity Variable, preferably in the domain of the GEO BON List of Essential Biodiversity Variables."
								},
								"__prefix": "xs"
							},
							"_name": "name",
							"_type": "ebvName",
							"__prefix": "xs"
						}
					],
					"__prefix": "xs"
				},
				"_name": "ebv",
				"__prefix": "xs"
			},
			{
				"sequence": {
					"choice": {
						"element": [
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "The full name of the organization that is associated with the resource. This field is intended to describe which institution or overall organization is associated with the resource being described."
									},
									"__prefix": "xs"
								},
								"_name": "organizationName",
								"_type": "NonEmptyStringType",
								"__prefix": "xs"
							},
							{
								"_ref": "individualName",
								"__prefix": "xs"
							},
							{
								"annotation": {
									"documentation": {
										"__prefix": "xs",
										"__text": "This field is intended to be used instead of a particular person or full organization name. If the associated person who holds the role changes frequently, then Position Name would be used for consistency. E.g., GBIF Data Manager."
									},
									"__prefix": "xs"
								},
								"_name": "positionName",
								"_type": "NonEmptyStringType",
								"__prefix": "xs"
							}
						],
						"_maxOccurs": "unbounded",
						"_minOccurs": "1",
						"__prefix": "xs"
					},
					"element": [
						{
							"_ref": "address",
							"_minOccurs": "0",
							"__prefix": "xs"
						},
						{
							"_ref": "phone",
							"_minOccurs": "0",
							"__prefix": "xs"
						},
						{
							"_ref": "electronicMailAddress",
							"_minOccurs": "0",
							"__prefix": "xs"
						},
						{
							"_ref": "onlineUrl",
							"_minOccurs": "0",
							"__prefix": "xs"
						},
						{
							"_ref": "userId",
							"_minOccurs": "0",
							"_maxOccurs": "unbounded",
							"__prefix": "xs"
						}
					],
					"__prefix": "xs"
				},
				"_name": "agentType",
				"__prefix": "xs"
			},
			{
				"complexContent": {
					"extension": {
						"sequence": {
							"element": {
								"_ref": "role",
								"__prefix": "xs"
							},
							"__prefix": "xs"
						},
						"_base": "agentType",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "agentWithRoleType",
				"__prefix": "xs"
			},
			{
				"annotation": {
					"documentation": {
						"__prefix": "xs",
						"__text": "A single literature citation with an optional identifier"
					},
					"__prefix": "xs"
				},
				"simpleContent": {
					"extension": {
						"attribute": {
							"annotation": {
								"documentation": {
									"__prefix": "xs",
									"__text": "A URI, DOI or other persistent identifier for the  citation"
								},
								"__prefix": "xs"
							},
							"_name": "identifier",
							"_use": "optional",
							"_type": "xs:string",
							"__prefix": "xs"
						},
						"_base": "NonEmptyStringType",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "citationType",
				"__prefix": "xs"
			},
			{
				"sequence": {
					"element": {
						"_ref": "calendarDate",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "calendarDate",
				"__prefix": "xs"
			},
			{
				"sequence": {
					"element": {
						"_ref": "description",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "description",
				"__prefix": "xs"
			},
			{
				"simpleContent": {
					"extension": {
						"attribute": {
							"_ref": "xml:lang",
							"_use": "optional",
							"__prefix": "xs"
						},
						"_base": "NonEmptyStringType",
						"__prefix": "xs"
					},
					"__prefix": "xs"
				},
				"_name": "i18nString",
				"__prefix": "xs"
			}
		],
		"_xmlns:xs": "http://www.w3.org/2001/XMLSchema",
		"_xmlns:eml": "eml://ecoinformatics.org/eml-2.1.1",
		"_xmlns:dc": "http://purl.org/dc/terms/",
		"_version": "1.1.1-SNAPSHOT",
		"_elementFormDefault": "qualified",
		"__prefix": "xs"
	}
}